// <auto-generated />
using System;
using CompanyWebApi.Persistence.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CompanyWebApi.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240601225924_AddAddressRelatedEntities")]
    partial class AddAddressRelatedEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.29");

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Address", b =>
                {
                    b.Property<Guid>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.HasKey("AddressId");

                    b.ToTable("Addresses", (string)null);
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.AddressRelation", b =>
                {
                    b.Property<int>("EntityIdType")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("EntityId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.Property<Guid>("AddressId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(0);

                    b.HasKey("EntityIdType", "EntityId", "AddressId");

                    b.HasIndex("AddressId");

                    b.ToTable("AddressRelations", (string)null);
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies", (string)null);

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1524),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1525),
                            Name = "Company One"
                        },
                        new
                        {
                            CompanyId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1526),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1526),
                            Name = "Company Two"
                        },
                        new
                        {
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1527),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1527),
                            Name = "Company Three"
                        });
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("DepartmentId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            CompanyId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1603),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1603),
                            Name = "Logistics"
                        },
                        new
                        {
                            DepartmentId = 2,
                            CompanyId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1604),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1604),
                            Name = "Administration"
                        },
                        new
                        {
                            DepartmentId = 3,
                            CompanyId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1605),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1605),
                            Name = "Development"
                        },
                        new
                        {
                            DepartmentId = 4,
                            CompanyId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1606),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1606),
                            Name = "Sales"
                        },
                        new
                        {
                            DepartmentId = 5,
                            CompanyId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1607),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1607),
                            Name = "Marketing"
                        },
                        new
                        {
                            DepartmentId = 6,
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1607),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1608),
                            Name = "Customer support"
                        },
                        new
                        {
                            DepartmentId = 7,
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1608),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1608),
                            Name = "Research and Development"
                        },
                        new
                        {
                            DepartmentId = 8,
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1609),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1609),
                            Name = "Purchasing"
                        },
                        new
                        {
                            DepartmentId = 9,
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1610),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1610),
                            Name = "Human Resource Management"
                        },
                        new
                        {
                            DepartmentId = 10,
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1610),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1610),
                            Name = "Accounting and Finance"
                        },
                        new
                        {
                            DepartmentId = 11,
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1611),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1611),
                            Name = "Production"
                        });
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.HasIndex("BirthDate");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("FirstName");

                    b.HasIndex("LastName");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BirthDate = new DateTime(1991, 8, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1623),
                            DepartmentId = 1,
                            FirstName = "John",
                            LastName = "Whyne",
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1623)
                        },
                        new
                        {
                            EmployeeId = 2,
                            BirthDate = new DateTime(1997, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1626),
                            DepartmentId = 4,
                            FirstName = "Mathias",
                            LastName = "Gernold",
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1626)
                        },
                        new
                        {
                            EmployeeId = 3,
                            BirthDate = new DateTime(1955, 12, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1627),
                            DepartmentId = 7,
                            FirstName = "Julia",
                            LastName = "Reynolds",
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1628)
                        },
                        new
                        {
                            EmployeeId = 4,
                            BirthDate = new DateTime(1935, 2, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1628),
                            DepartmentId = 2,
                            FirstName = "Alois",
                            LastName = "Mock",
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1628)
                        },
                        new
                        {
                            EmployeeId = 5,
                            BirthDate = new DateTime(2001, 3, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1629),
                            DepartmentId = 6,
                            FirstName = "Gertraud",
                            LastName = "Bochold",
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1629)
                        },
                        new
                        {
                            EmployeeId = 6,
                            BirthDate = new DateTime(1984, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CompanyId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1630),
                            DepartmentId = 6,
                            FirstName = "Alan",
                            LastName = "Ford",
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1630)
                        });
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.EmployeeAddress", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.ToTable("EmployeeAddresses", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Address = "Kentucky, USA"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Address = "Berlin, Germany"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Address = "Los Angeles, USA"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Address = "Vienna, Austria"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Address = "Cologne, Germany"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Address = "Milano, Italy"
                        });
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.User", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1650),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1650),
                            Password = "test",
                            Token = "",
                            Username = "johnw"
                        },
                        new
                        {
                            EmployeeId = 2,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1651),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1651),
                            Password = "test",
                            Token = "",
                            Username = "mathiasg"
                        },
                        new
                        {
                            EmployeeId = 3,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1652),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1652),
                            Password = "test",
                            Token = "",
                            Username = "juliar"
                        },
                        new
                        {
                            EmployeeId = 4,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1652),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1652),
                            Password = "test",
                            Token = "",
                            Username = "aloism"
                        },
                        new
                        {
                            EmployeeId = 5,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1653),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1653),
                            Password = "test",
                            Token = "",
                            Username = "gertraudb"
                        },
                        new
                        {
                            EmployeeId = 6,
                            Created = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1653),
                            Modified = new DateTime(2024, 6, 1, 22, 59, 23, 808, DateTimeKind.Utc).AddTicks(1654),
                            Password = "test",
                            Token = "",
                            Username = "alanf"
                        });
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.AddressRelation", b =>
                {
                    b.HasOne("CompanyWebApi.Contracts.Entities.Address", "Address")
                        .WithMany("AddressRelations")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Department", b =>
                {
                    b.HasOne("CompanyWebApi.Contracts.Entities.Company", "Company")
                        .WithMany("Departments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Employee", b =>
                {
                    b.HasOne("CompanyWebApi.Contracts.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CompanyWebApi.Contracts.Entities.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Company");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.EmployeeAddress", b =>
                {
                    b.HasOne("CompanyWebApi.Contracts.Entities.Employee", "Employee")
                        .WithOne("EmployeeAddress")
                        .HasForeignKey("CompanyWebApi.Contracts.Entities.EmployeeAddress", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.User", b =>
                {
                    b.HasOne("CompanyWebApi.Contracts.Entities.Employee", "Employee")
                        .WithOne("User")
                        .HasForeignKey("CompanyWebApi.Contracts.Entities.User", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Address", b =>
                {
                    b.Navigation("AddressRelations");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Company", b =>
                {
                    b.Navigation("Departments");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("CompanyWebApi.Contracts.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeAddress");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
